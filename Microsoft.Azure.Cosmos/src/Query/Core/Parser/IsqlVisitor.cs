//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\CosmosSQLANTLR\CosmosSqlAntlr\CosmosSqlAntlr\sql.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Microsoft.Azure.Cosmos.Query.Core.Parser
{
    #if false
    using Antlr4.Runtime.Misc;
    using Antlr4.Runtime.Tree;
    using IToken = Antlr4.Runtime.IToken;

    /// <summary>
    /// This interface defines a complete generic visitor for a parse tree produced
    /// by <see cref="sqlParser"/>.
    /// </summary>
    /// <typeparam name="Result">The return type of the visit operation.</typeparam>
    [System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
    internal interface IsqlVisitor<Result> : IParseTreeVisitor<Result>
    {
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.program"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitProgram([NotNull] sqlParser.ProgramContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.sql_query"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSql_query([NotNull] sqlParser.Sql_queryContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.select_clause"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSelect_clause([NotNull] sqlParser.Select_clauseContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.top_spec"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitTop_spec([NotNull] sqlParser.Top_specContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.selection"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSelection([NotNull] sqlParser.SelectionContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.select_star_spec"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSelect_star_spec([NotNull] sqlParser.Select_star_specContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.select_value_spec"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSelect_value_spec([NotNull] sqlParser.Select_value_specContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.select_list_spec"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSelect_list_spec([NotNull] sqlParser.Select_list_specContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.select_item"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSelect_item([NotNull] sqlParser.Select_itemContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.from_clause"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitFrom_clause([NotNull] sqlParser.From_clauseContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>JoinCollectionExpression</c>
        /// labeled alternative in <see cref="sqlParser.collection_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitJoinCollectionExpression([NotNull] sqlParser.JoinCollectionExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>AliasedCollectionExpression</c>
        /// labeled alternative in <see cref="sqlParser.collection_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitAliasedCollectionExpression([NotNull] sqlParser.AliasedCollectionExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ArrayIteratorCollectionExpression</c>
        /// labeled alternative in <see cref="sqlParser.collection_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArrayIteratorCollectionExpression([NotNull] sqlParser.ArrayIteratorCollectionExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>InputPathCollection</c>
        /// labeled alternative in <see cref="sqlParser.collection"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitInputPathCollection([NotNull] sqlParser.InputPathCollectionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>SubqueryCollection</c>
        /// labeled alternative in <see cref="sqlParser.collection"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSubqueryCollection([NotNull] sqlParser.SubqueryCollectionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>StringPathExpression</c>
        /// labeled alternative in <see cref="sqlParser.path_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitStringPathExpression([NotNull] sqlParser.StringPathExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>EpsilonPathExpression</c>
        /// labeled alternative in <see cref="sqlParser.path_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitEpsilonPathExpression([NotNull] sqlParser.EpsilonPathExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>IdentifierPathExpression</c>
        /// labeled alternative in <see cref="sqlParser.path_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitIdentifierPathExpression([NotNull] sqlParser.IdentifierPathExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>NumberPathExpression</c>
        /// labeled alternative in <see cref="sqlParser.path_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitNumberPathExpression([NotNull] sqlParser.NumberPathExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.where_clause"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitWhere_clause([NotNull] sqlParser.Where_clauseContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.group_by_clause"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitGroup_by_clause([NotNull] sqlParser.Group_by_clauseContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.order_by_clause"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitOrder_by_clause([NotNull] sqlParser.Order_by_clauseContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.order_by_items"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitOrder_by_items([NotNull] sqlParser.Order_by_itemsContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.order_by_item"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitOrder_by_item([NotNull] sqlParser.Order_by_itemContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.sort_order"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSort_order([NotNull] sqlParser.Sort_orderContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.offset_limit_clause"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitOffset_limit_clause([NotNull] sqlParser.Offset_limit_clauseContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.offset_count"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitOffset_count([NotNull] sqlParser.Offset_countContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.limit_count"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLimit_count([NotNull] sqlParser.Limit_countContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>LiteralScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLiteralScalarExpression([NotNull] sqlParser.LiteralScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>BetweenScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBetweenScalarExpression([NotNull] sqlParser.BetweenScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ObjectCreateScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitObjectCreateScalarExpression([NotNull] sqlParser.ObjectCreateScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>InScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitInScalarExpression([NotNull] sqlParser.InScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ArrayCreateScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArrayCreateScalarExpression([NotNull] sqlParser.ArrayCreateScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>MemberIndexerScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitMemberIndexerScalarExpression([NotNull] sqlParser.MemberIndexerScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>SubqueryScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitSubqueryScalarExpression([NotNull] sqlParser.SubqueryScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PropertyRefScalarExpressionBase</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPropertyRefScalarExpressionBase([NotNull] sqlParser.PropertyRefScalarExpressionBaseContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>CoalesceScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitCoalesceScalarExpression([NotNull] sqlParser.CoalesceScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ConditionalScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitConditionalScalarExpression([NotNull] sqlParser.ConditionalScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>FunctionCallScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitFunctionCallScalarExpression([NotNull] sqlParser.FunctionCallScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ArrayScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitArrayScalarExpression([NotNull] sqlParser.ArrayScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>ExistsScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitExistsScalarExpression([NotNull] sqlParser.ExistsScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>UnaryScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitUnaryScalarExpression([NotNull] sqlParser.UnaryScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>BinaryScalarExpression</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBinaryScalarExpression([NotNull] sqlParser.BinaryScalarExpressionContext context);
        /// <summary>
        /// Visit a parse tree produced by the <c>PropertyRefScalarExpressionRecursive</c>
        /// labeled alternative in <see cref="sqlParser.scalar_expression"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitPropertyRefScalarExpressionRecursive([NotNull] sqlParser.PropertyRefScalarExpressionRecursiveContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.scalar_expression_list"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitScalar_expression_list([NotNull] sqlParser.Scalar_expression_listContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.binary_operator"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitBinary_operator([NotNull] sqlParser.Binary_operatorContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.unary_operator"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitUnary_operator([NotNull] sqlParser.Unary_operatorContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.object_propertty_list"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitObject_propertty_list([NotNull] sqlParser.Object_propertty_listContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.object_property"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitObject_property([NotNull] sqlParser.Object_propertyContext context);
        /// <summary>
        /// Visit a parse tree produced by <see cref="sqlParser.literal"/>.
        /// </summary>
        /// <param name="context">The parse tree.</param>
        /// <return>The visitor result.</return>
        Result VisitLiteral([NotNull] sqlParser.LiteralContext context);
    }
#endif
}